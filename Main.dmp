00001  0000             ; 10 SYS (2304)
00002  0001             
00003  0001             *=$0801
00004  0801             
00005  0801  0E 08 0A              BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $32, $33, $30, $34, $29, $00, $00, $00
00006  0810             
00007  0810             
00008  0810             *=$0900
00009  0900             
00010  0900             EYE_FRONT_PIXELS=$2E80 
00011  0900             EYE_LEFT_PIXELS=EYE_FRONT_PIXELS+64 
00012  0900             EYE_RIGHT_PIXELS=EYE_LEFT_PIXELS+64 
00013  0900             
00014  0900             
00015  0900             PROGRAM_START 
00016  0900             
00017  0900  20 14 09              JSR SET_UP_INTERRUPT
00018  0903  20 21 09              JSR COPY_EYE_SPRITE_DATA
00019  0906  20 91 09              JSR SET_EYE_SPRITE_POINTER_TO_FRONT
00020  0909  20 39 09              JSR MAKE_EYE_WHITE
00021  090C  20 3F 09              JSR SET_EYE_SPRITE_LOCATION
00022  090F  20 5A 09              JSR ENABLE_EYE_SPRITE
00023  0912             
00024  0912             PROGRAM_END 
00025  0912  60                    RTS
00026  0913             
00027  0913             
00028  0913  00         COUNTER    BYTE 00
00029  0914                        
00030  0914             ;;;;;;;;;;;;;;;
00031  0914             ; SUBROUTINES ;
00032  0914             ;;;;;;;;;;;;;;;
00033  0914             
00034  0914             ; ADDS THE ANIMATION ROUTINE TO INTERRUPTS.
00035  0914             ;
00036  0914             ; INPUTS: ANIMATION_ROUTINE: THE SUBROUTINE FOR THE ANIMATION
00037  0914             ;
00038  0914             ; OUTPUTS:
00039  0914             ; $0314: INTERRUPT VECTOR (STORES THE LOW BYTE OF THE ANIMATION SUBROUTINE)
00040  0914             ; $0315: INTERRUPT VECTOR (STORES THE HIGH BYTE OF THE ANIMATION SUBROUTINE)
00041  0914             SET_UP_INTERRUPT 
00042  0914  78                    SEI ; DISABLE INTERRUPTS
00043  0915  A9 60                 LDA #<ANIMATION_ROUTINE ; LOADS LOW BYTE OF ANIMATION_ROUTINE START ADDRESS
00044  0917  8D 14 03              STA $0314 ; STORES LOW BYTE TO INTERRUPT VECTOR
00045  091A  A9 09                 LDA #>ANIMATION_ROUTINE ; LOADS HIGH BYTE OF ANIMATION_ROUTINE START ADDRESS
00046  091C  8D 15 03              STA $0315 ; STORES HIGH BYTE TO INTERRUPT VECTOR
00047  091F  58                    CLI ; RE-ENABLE INTERRUPTS
00048  0920  60                    RTS
00049  0921             
00050  0921             
00051  0921             ; COPIES THE EYE SPRITE TO THE PIXEL STORAGE
00052  0921             ;
00053  0921             ; INPUTS:
00054  0921             ; EYE_FRONT_DATA: DATA FOR WHEN THE EYE IS LOOKING STRAIGHT
00055  0921             ; EYE_LEFT_DATA: DATA FOR WHEN THE EYE IS LOOKING LEFT
00056  0921             ; EYE_RIGHT_DATA: DATA FOR WHEN THE EYE IS LOOKING RIGHT
00057  0921             ;
00058  0921             ; OUTPUTS:
00059  0921             ; EYE_FRONT_PIXELS: STORES THE PIXELS FOR WHEN THE EYE IS LOOKING STRAIGHT
00060  0921             ; EYE_LEFT_PIXELS: STORES THE PIXELS FOR WHEN THE EYE IS LOOKING LEFT
00061  0921             ; EYE_RIGHT_PIXELS: STORES THE PIXELS FOR WHEN THE EYE IS LOOKING RIGHT
00062  0921             COPY_EYE_SPRITE_DATA 
00063  0921             ; COPIES EYE SPRITE DATA
00064  0921  A2 3F                 LDX #63
00065  0923             
00066  0923             LOOP_EYE_DATA 
00067  0923  BD 97 09              LDA EYE_FRONT_DATA,X
00068  0926  9D 80 2E              STA EYE_FRONT_PIXELS,X
00069  0929  BD D7 09              LDA EYE_LEFT_DATA,X
00070  092C  9D C0 2E              STA EYE_LEFT_PIXELS,X
00071  092F  BD 17 0A              LDA EYE_RIGHT_DATA,X
00072  0932  9D 00 2F              STA EYE_RIGHT_PIXELS,X
00073  0935  CA                    DEX
00074  0936  10 EB                 BPL LOOP_EYE_DATA
00075  0938  60                    RTS
00076  0939             
00077  0939             
00078  0939             ; CHANGES THE EYE SPRITE COLOR TO WHITE
00079  0939             ;
00080  0939             ; INPUTS: NONE
00081  0939             ; OUTPUTS: $D027: COLOR STORAGE FOR THE FIRST SPRITE
00082  0939             MAKE_EYE_WHITE 
00083  0939             ; SETS EYE SPRITE COLOR
00084  0939  A9 01                 LDA #$01 ; WHITE
00085  093B  8D 27 D0              STA $D027
00086  093E  60                    RTS
00087  093F             
00088  093F             
00089  093F             ; SETS THE EYE SPRITE'S LOCATION
00090  093F             ;
00091  093F             ; INPUTS: NONE
00092  093F             ; OUTPUTS: THE SPRITE'S X AND Y LOCATION (SEE SET_EYE_X_SPRITE_LOCATION AND SET_EYE_Y_SPRITE_LOCATION)
00093  093F             SET_EYE_SPRITE_LOCATION 
00094  093F  A9 32                 LDA #50
00095  0941  20 4A 09              JSR SET_EYE_X_SPRITE_LOCATION
00096  0944  A9 3C                 LDA #60
00097  0946  20 56 09              JSR SET_EYE_Y_SPRITE_LOCATION
00098  0949  60                    RTS
00099  094A             
00100  094A             
00101  094A             ; SETS THE EYE SPRITE'S X LOCATION
00102  094A             ;
00103  094A             ; INPUTS: THE X-COORDINATE (FROM THE ACCUMULATOR)
00104  094A             ;
00105  094A             ; OUTPUTS:
00106  094A             ; $D000: FIRST SPRITE X-COORDINATE REGISTER
00107  094A             ; $D010: X-MSB REGISTER (ADDS 256 TO THE COORDINATE VALUE)
00108  094A             SET_EYE_X_SPRITE_LOCATION 
00109  094A             ; SETS EYE SPRITE X LOCATION
00110  094A  8D 00 D0              STA $D000
00111  094D  AD 10 D0              LDA $D010 ; LOAD X-MSB
00112  0950  09 01                 ORA #%00000001 ; SET EXTRA BIT FOR SPRITE #1 - THIS WILL MAKE THE X COORDINATE += 256
00113  0952  8D 10 D0              STA $D010 ; WRITE X-MSB REGISTER
00114  0955  60                    RTS
00115  0956             
00116  0956             
00117  0956             ; SETS THE EYE SPRITE'S Y LOCATION
00118  0956             ;
00119  0956             ; INPUTS: THE Y-COORDINATE (FROM THE ACCUMULATOR)
00120  0956             ; OUTPUTS: $D001: FIRST SPRITE Y-COORDINATE REGISTER
00121  0956             SET_EYE_Y_SPRITE_LOCATION 
00122  0956             ; SETS EYE SPRITE Y LOCATION
00123  0956  8D 01 D0              STA $D001
00124  0959  60                    RTS
00125  095A             
00126  095A             
00127  095A             ; ENABLES THE EYE SPRITE
00128  095A             ;
00129  095A             ; INPUTS: NONE
00130  095A             ; OUTPUTS: $D015: SPRITE VISIBILITY REGISTER
00131  095A             ENABLE_EYE_SPRITE 
00132  095A             ; ENABLES EYE SPRITE
00133  095A  A9 01                 LDA #%00000001
00134  095C  8D 15 D0              STA $D015
00135  095F  60                    RTS
00136  0960             
00137  0960             
00138  0960             ; CHANGES THE EYEBALL SPRITE PHASE APPROXIMATELY ONCE EVERY SECOND
00139  0960             ;
00140  0960             ; INPUTS:
00141  0960             ; COUNTER: KEEPS TRACK OF HOW MANY TIMES WE'VE HIT THE INTERRUPT (ROLLS OVER AFTER 255)
00142  0960             ; EYE_FRONT_PIXELS, EYE_LEFT_PIXELS, EYE_RIGHT_PIXELS: THE PIXEL DATA FOR EACH EYEBALL SPRITE PHASE
00143  0960             ;
00144  0960             ; OUTPUTS:
00145  0960             ; COUNTER: KEEPS TRACK OF HOW MANY TIMES WE'VE HIT THE INTERRUPT (ROLLS OVER AFTER 255)
00146  0960             ; $07F8: THE FIRST SPRITE POINTER
00147  0960             ANIMATION_ROUTINE 
00148  0960  AD 13 09              LDA COUNTER
00149  0963  65 01                 ADC 1
00150  0965  8D 13 09              STA COUNTER
00151  0968  C9 3F                 CMP #63
00152  096A  F0 14                 BEQ LOOK_LEFT
00153  096C  C9 7F                 CMP #127
00154  096E  F0 08                 BEQ LOOK_STRAIGHT
00155  0970  C9 BF                 CMP #191
00156  0972  F0 14                 BEQ LOOK_RIGHT
00157  0974  C9 FF                 CMP #255
00158  0976  D0 15                 BNE JUMP_TO_KERNEL_HANDLER
00159  0978             
00160  0978             LOOK_STRAIGHT 
00161  0978             ; SETS EYE SPRITE POINTER TO FRONT SPRITE
00162  0978  A9 BA                 LDA #EYE_FRONT_PIXELS/64
00163  097A  8D F8 07              STA $07F8
00164  097D  4C 8D 09              JMP JUMP_TO_KERNEL_HANDLER
00165  0980             
00166  0980             LOOK_LEFT
00167  0980             ; SETS EYE SPRITE POINTER TO LEFT SPRITE
00168  0980  A9 BB                 LDA #EYE_LEFT_PIXELS/64
00169  0982  8D F8 07              STA $07F8
00170  0985  4C 8D 09              JMP JUMP_TO_KERNEL_HANDLER
00171  0988             
00172  0988             LOOK_RIGHT 
00173  0988             ; SETS EYE SPRITE POINTER TO RIGHT SPRITE
00174  0988  A9 BC                 LDA #EYE_RIGHT_PIXELS/64
00175  098A  8D F8 07              STA $07F8
00176  098D             
00177  098D             JUMP_TO_KERNEL_HANDLER 
00178  098D  4C 31 EA              JMP $EA31 ; KERNEL HANDLER
00179  0990  60                    RTS
00180  0991             
00181  0991             
00182  0991             ; SETS THE FIRST SPRITE POINTER TO THE STRAIGHT EYE SPRITE
00183  0991             ;
00184  0991             ; INPUTS: EYE_FRONT_PIXELS: THE PIXELS FOR THE EYE LOOKING STRAIGHT
00185  0991             ; OUTPUTS: $07F8 FIRST SPRITE POINTER ADDRESS
00186  0991             SET_EYE_SPRITE_POINTER_TO_FRONT 
00187  0991             ; SETS EYE SPRITE POINTER TO FRONT SPRITE
00188  0991  A9 BA                 LDA #EYE_FRONT_PIXELS/64
00189  0993  8D F8 07              STA $07F8
00190  0996  60                    RTS
00191  0997             
00192  0997                        
00193  0997             
00194  0997             EYE_FRONT_DATA 
00195  0997             ; EYE_FRONT
00196  0997  00 7E 00              BYTE $00,$7E,$00
00197  099A  03 81 C0              BYTE $03,$81,$C0
00198  099D  0C 7E 30              BYTE $0C,$7E,$30
00199  09A0  13 FF C8              BYTE $13,$FF,$C8
00200  09A3  2F FF F4              BYTE $2F,$FF,$F4
00201  09A6  2F FF F4              BYTE $2F,$FF,$F4
00202  09A9  5F FF FA              BYTE $5F,$FF,$FA
00203  09AC  5F C3 FA              BYTE $5F,$C3,$FA
00204  09AF  5F 81 FA              BYTE $5F,$81,$FA
00205  09B2  BF 00 FD              BYTE $BF,$00,$FD
00206  09B5  BF 00 FD              BYTE $BF,$00,$FD
00207  09B8  BF 00 FD              BYTE $BF,$00,$FD
00208  09BB  5F 81 FA              BYTE $5F,$81,$FA
00209  09BE  5F C3 FA              BYTE $5F,$C3,$FA
00210  09C1  5F FF FA              BYTE $5F,$FF,$FA
00211  09C4  2F FF F4              BYTE $2F,$FF,$F4
00212  09C7  2F FF F4              BYTE $2F,$FF,$F4
00213  09CA  13 FF C8              BYTE $13,$FF,$C8
00214  09CD  0C 7E 30              BYTE $0C,$7E,$30
00215  09D0  03 81 C0              BYTE $03,$81,$C0
00216  09D3  00 7E 00              BYTE $00,$7E,$00
00217  09D6  00                    BYTE $00
00218  09D7             
00219  09D7             EYE_LEFT_DATA 
00220  09D7             ; EYE_LEFT
00221  09D7  00 7E 00              BYTE $00,$7E,$00
00222  09DA  03 81 C0              BYTE $03,$81,$C0
00223  09DD  0C 7E 30              BYTE $0C,$7E,$30
00224  09E0  13 FF C8              BYTE $13,$FF,$C8
00225  09E3  2F FF F4              BYTE $2F,$FF,$F4
00226  09E6  2F FF F4              BYTE $2F,$FF,$F4
00227  09E9  5F FF FA              BYTE $5F,$FF,$FA
00228  09EC  5C 7F FA              BYTE $5C,$7F,$FA
00229  09EF  58 3F FA              BYTE $58,$3F,$FA
00230  09F2  B8 3F FD              BYTE $B8,$3F,$FD
00231  09F5  B8 3F FD              BYTE $B8,$3F,$FD
00232  09F8  B8 3F FD              BYTE $B8,$3F,$FD
00233  09FB  58 3F FA              BYTE $58,$3F,$FA
00234  09FE  5C 7F FA              BYTE $5C,$7F,$FA
00235  0A01  5F FF FA              BYTE $5F,$FF,$FA
00236  0A04  2F FF F4              BYTE $2F,$FF,$F4
00237  0A07  2F FF F4              BYTE $2F,$FF,$F4
00238  0A0A  13 FF C8              BYTE $13,$FF,$C8
00239  0A0D  0C 7E 30              BYTE $0C,$7E,$30
00240  0A10  03 81 C0              BYTE $03,$81,$C0
00241  0A13  00 7E 00              BYTE $00,$7E,$00
00242  0A16  00                    BYTE $00
00243  0A17             
00244  0A17             EYE_RIGHT_DATA 
00245  0A17             ; EYE RIGHT
00246  0A17  00 7E 00              BYTE $00,$7E,$00
00247  0A1A  03 81 C0              BYTE $03,$81,$C0
00248  0A1D  0C 7E 30              BYTE $0C,$7E,$30
00249  0A20  13 FF C8              BYTE $13,$FF,$C8
00250  0A23  2F FF F4              BYTE $2F,$FF,$F4
00251  0A26  2F FF F4              BYTE $2F,$FF,$F4
00252  0A29  5F FF FA              BYTE $5F,$FF,$FA
00253  0A2C  5F FE 3A              BYTE $5F,$FE,$3A
00254  0A2F  5F FC 1A              BYTE $5F,$FC,$1A
00255  0A32  BF FC 1D              BYTE $BF,$FC,$1D
00256  0A35  BF FC 1D              BYTE $BF,$FC,$1D
00257  0A38  BF FC 1D              BYTE $BF,$FC,$1D
00258  0A3B  5F FC 1A              BYTE $5F,$FC,$1A
00259  0A3E  5F FE 3A              BYTE $5F,$FE,$3A
00260  0A41  5F FF FA              BYTE $5F,$FF,$FA
00261  0A44  2F FF F4              BYTE $2F,$FF,$F4
00262  0A47  2F FF F4              BYTE $2F,$FF,$F4
00263  0A4A  13 FF C8              BYTE $13,$FF,$C8
00264  0A4D  0C 7E 30              BYTE $0C,$7E,$30
00265  0A50  03 81 C0              BYTE $03,$81,$C0
00266  0A53  00 7E 00              BYTE $00,$7E,$00
00267  0A56  00                    BYTE $00
00268  0A57             
00269  0A57             

******* 20 Label(s) *******
ANIMATION_ROUTINE = $0960 
COPY_EYE_SPRITE_DATA = $0921 
COUNTER = $0913 
ENABLE_EYE_SPRITE = $095A 
EYE_FRONT_DATA = $0997 
EYE_LEFT_DATA = $09D7 
EYE_RIGHT_DATA = $0A17 
jump_to_kernel_handler = $098D 
look_left = $0980 
look_right = $0988 
look_straight = $0978 
loop_eye_data = $0923 
MAKE_EYE_WHITE = $0939 
PROGRAM_END = $0912 
PROGRAM_START = $0900 
SET_EYE_SPRITE_LOCATION = $093F 
SET_EYE_SPRITE_POINTER_TO_FRONT = $0991 
SET_EYE_X_SPRITE_LOCATION = $094A 
SET_EYE_Y_SPRITE_LOCATION = $0956 
SET_UP_INTERRUPT = $0914 

******* 2 Unused label(s) *******
PROGRAM_END
PROGRAM_START

******* 4 Variable(s) *******
EYE_FRONT_PIXELS  = $2E80
EYE_LEFT_PIXELS  = $2EC0
EYE_RIGHT_PIXELS  = $2F00
tgt_c64  = $0001
******* 4 Unused variables(s) *******
EYE_FRONT_PIXELS
EYE_LEFT_PIXELS
EYE_RIGHT_PIXELS
tgt_c64

